from __future__ import division
__author__ = 'vladimir'
from xml.dom import minidom
import xml.etree.ElementTree as ET

class Parser:
  '''
  Class is used to parse xml files generated by ALPS
  '''
  def __init__(self, **kwargs):
    self.data_file = kwargs['data_file']
    self.data = ET.parse(self.data_file)
    self.root = self.data.getroot()

    self.energy = None #total energy
    self.J = None # Coupling in the plane
    self.T = None # temperature
    self.num_sites = None #number of sites

  def get_num_sites(self):
    if self.num_sites == None:
      self.num_sites = self.root.find("Number_of_Sites")
      self.num_sites = int(float(self.num_sites.attrib["value"]))
    return self.num_sites

  def get_energy(self):
    if self.energy == None:
      self.energy = self.root.find("Energy")
      self.energy = float(self.energy.attrib["value"]) / self.get_num_sites(), float(self.energy.attrib["error"]) / self.get_num_sites()
    return  self.energy

  def get_J(self):
    if self.J == None:
      self.J = float(self.root.find("J").attrib["value"])
    return self.J

  def get_T(self):
    if self.T == None:
      self.T = float(self.root.find("T").attrib["value"])
    return  self.T
